apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: erp-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: standard

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: erp-system
  labels:
    app: postgres
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        component: database
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: PGDATA
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: PGDATA
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        - name: postgres-init
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - erp_user
            - -d
            - erp_main
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - erp_user
            - -d
            - erp_main
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: postgres-init
        configMap:
          name: postgres-init-scripts

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: erp-system
  labels:
    app: postgres
    component: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: postgres

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: erp-system
data:
  01-create-databases.sql: |
    -- ERP System Database Initialization Script

    -- Create databases for each microservice
    CREATE DATABASE erp_main;
    CREATE DATABASE erp_users;
    CREATE DATABASE erp_finance;
    CREATE DATABASE erp_inventory;
    CREATE DATABASE erp_hr;
    CREATE DATABASE erp_sales;
    CREATE DATABASE erp_purchase;
    CREATE DATABASE erp_production;

    -- Grant privileges to erp_user (shared user for simplicity)
    GRANT ALL PRIVILEGES ON DATABASE erp_main TO erp_user;
    GRANT ALL PRIVILEGES ON DATABASE erp_users TO erp_user;
    GRANT ALL PRIVILEGES ON DATABASE erp_finance TO erp_user;
    GRANT ALL PRIVILEGES ON DATABASE erp_inventory TO erp_user;
    GRANT ALL PRIVILEGES ON DATABASE erp_hr TO erp_user;
    GRANT ALL PRIVILEGES ON DATABASE erp_sales TO erp_user;
    GRANT ALL PRIVILEGES ON DATABASE erp_purchase TO erp_user;
    GRANT ALL PRIVILEGES ON DATABASE erp_production TO erp_user;