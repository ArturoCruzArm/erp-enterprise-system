version: '3.8'

services:
  # Bases de datos
  postgres:
    image: postgres:15
    container_name: erp-postgres
    environment:
      POSTGRES_DB: erp_main
      POSTGRES_USER: erp_user
      POSTGRES_PASSWORD: erp_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init:/docker-entrypoint-initdb.d
    networks:
      - erp-network

  redis:
    image: redis:7-alpine
    container_name: erp-redis
    ports:
      - "6379:6379"
    networks:
      - erp-network

  # Monitoreo
  prometheus:
    image: prom/prometheus:latest
    container_name: erp-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - erp-network

  grafana:
    image: grafana/grafana:latest
    container_name: erp-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - erp-network

  # Message Broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: erp-kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - erp-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: erp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - erp-network

volumes:
  postgres_data:
  grafana_data:

networks:
  erp-network:
    driver: bridge